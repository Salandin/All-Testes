print("Processando...")
print("Processando..")
print("Processando.")
nota1 <- as.integer(nota1)
nota2 <- as.integer(nota2)
resp <- (nota1+nota2)/2
print("A sua mÃ©dia Ã©:")
print(resp)
}
calc()
tabuada()
tabuada <- function(num, nume){
print("Bom dia, quais números você quer ver a tabuada?")
num <- readline(prompt = "Primeiro número: ")
nume <- readline(prompt = "Segundo número: ")
print("Tabuado do", num, "===============================================")
print(num, "x 1 =" num*1)
print(num, "x 2 =" num*2)
print(num, "x 3 =" num*3)
print(num, "x 4 =" num*4)
print(num, "x 5 =" num*5)
print(num, "x 6 =" num*6)
print(num, "x 7 =" num*7)
print(num, "x 8 =" num*8)
print(num, "x 9 =" num*9)
print(num, "x 10 =" num*10)
print("Tabuado do", nume, "===============================================")
print(nume, "x 1 =" nume*1)
print(nume, "x 2 =" nume*2)
print(nume, "x 3 =" nume*3)
print(nume, "x 4 =" nume*4)
print(nume, "x 5 =" nume*5)
print(nume, "x 6 =" nume*6)
print(nume, "x 7 =" nume*7)
print(nume, "x 8 =" nume*8)
print(nume, "x 9 =" nume*9)
print(nume, "x 10 =" nume*10)
}
tabuada()
tabuada <- function(num, nume){
print("Bom dia, quais números você quer ver a tabuada?")
num <- readline(prompt = "Primeiro número: ")
nume <- readline(prompt = "Segundo número: ")
paste("Tabuado do", num, "===============================================")
paste(num, "x 1 =" num*1)
paste(num, "x 2 =" num*2)
paste(num, "x 3 =" num*3)
paste(num, "x 4 =" num*4)
paste(num, "x 5 =" num*5)
paste(num, "x 6 =" num*6)
paste(num, "x 7 =" num*7)
paste(num, "x 8 =" num*8)
paste(num, "x 9 =" num*9)
paste(num, "x 10 =" num*10)
paste("Tabuado do", nume, "===============================================")
paste(nume, "x 1 =" nume*1)
paste(nume, "x 2 =" nume*2)
paste(nume, "x 3 =" nume*3)
paste(nume, "x 4 =" nume*4)
paste(nume, "x 5 =" nume*5)
paste(nume, "x 6 =" nume*6)
paste(nume, "x 7 =" nume*7)
paste(nume, "x 8 =" nume*8)
paste(nume, "x 9 =" nume*9)
paste(nume, "x 10 =" nume*10)
}
tabuada()
tabuada <- function(num, nume){
print("Bom dia, quais números você quer ver a tabuada?")
num <- readline(prompt = "Primeiro número: ")
nume <- readline(prompt = "Segundo número: ")
num <- as.integer(num)
nume <- as.integer(nume)
paste("Tabuado do", num, "===============================================")
paste(num, "x 1 =" num*1)
paste(num, "x 2 =" num*2)
paste(num, "x 3 =" num*3)
paste(num, "x 4 =" num*4)
paste(num, "x 5 =" num*5)
paste(num, "x 6 =" num*6)
paste(num, "x 7 =" num*7)
paste(num, "x 8 =" num*8)
paste(num, "x 9 =" num*9)
paste(num, "x 10 =" num*10)
paste("Tabuado do", nume, "===============================================")
paste(nume, "x 1 =" nume*1)
paste(nume, "x 2 =" nume*2)
paste(nume, "x 3 =" nume*3)
paste(nume, "x 4 =" nume*4)
paste(nume, "x 5 =" nume*5)
paste(nume, "x 6 =" nume*6)
paste(nume, "x 7 =" nume*7)
paste(nume, "x 8 =" nume*8)
paste(nume, "x 9 =" nume*9)
paste(nume, "x 10 =" nume*10)
}
tabuada()
source('~/.active-rstudio-document', encoding = 'UTF-8')
print(res0)
tabuada <- function(num, nume){
print("Bom dia, quais números você quer ver a tabuada?")
num <- readline(prompt = "Primeiro número: ")
nume <- readline(prompt = "Segundo número: ")
num <- as.integer(num)
nume <- as.integer(nume)
res0 <- paste("Tabuado do", num, "===")
res1 <- paste(num, "x 1 =" num*1)
res2 <- paste(num, "x 2 =" num*2)
res3 <- paste(num, "x 3 =" num*3)
res4 <- paste(num, "x 4 =" num*4)
res5 <- paste(num, "x 5 =" num*5)
res6 <- paste(num, "x 6 =" num*6)
res7 <- paste(num, "x 7 =" num*7)
res8 <- paste(num, "x 8 =" num*8)
res9 <- paste(num, "x 9 =" num*9)
res10 <- paste(num, "x 10 =" num*10)
print(res0)
print(res1)
print(res2)
print(res3)
print(res4)
print(res5)
print(res6)
print(res7)
print(res8)
print(res9)
print(res10)
resp0 <- paste("Tabuado do", nume, "===")
resp1 <- paste(nume, "x 1 =" nume*1)
resp2 <- paste(nume, "x 2 =" nume*2)
resp3 <- paste(nume, "x 3 =" nume*3)
resp4 <- paste(nume, "x 4 =" nume*4)
resp5 <- paste(nume, "x 5 =" nume*5)
resp6 <- paste(nume, "x 6 =" nume*6)
resp7 <- paste(nume, "x 7 =" nume*7)
resp8 <- paste(nume, "x 8 =" nume*8)
resp9 <- paste(nume, "x 9 =" nume*9)
resp10 <- paste(nume, "x 10 =" nume*10)
print(resp0)
print(resp1)
print(resp2)
print(resp3)
print(resp4)
print(resp5)
print(resp6)
print(resp7)
print(resp8)
print(resp9)
print(resp10)
}
tabuada()
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
setwd("~/")
setwd("C:/Users/rafa_/Desktop/teste-r")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
install.packages("geobr")
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
install.packages("dplyr")
library(geobr)
library(ggplot2)
library(sf)
library(dplyr)
datasets <- list_geobr()
print(datasets, n=21)
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(subtitle="States", size=8) +
theme_minimal() +
no_axis
states <- read_state(year=2020)
states <- read_state(year=2019)
# Remove plot axis
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
# Plot all Brazilian states
ggplot() +
geom_sf(data=states, fill="#2D3E50", color="#FEBF57", size=.15, show.legend = FALSE) +
labs(subtitle="States", size=8) +
theme_minimal() +
no_axis
datasets <- list_geobr()
print(datasets, n=21)
if (!require(devtools)) install.packages(devtools)
devtools::install_github("mnpopcenter/ipumsr/ipumsexamples")
install.packages("devtools")
library(devtools)
devtools::install_github("mnpopcenter/ipumsr/ipumsexamples")
# Load shape file
colombia_shape <- read_ipums_sf(ex_file("geo1_co1964_2005.zip"), verbose = FALSE)
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
install.packages("ipumsr")
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
ipumsi_ddi_file <- ex_file("raw_data.csv")
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
ipumsi_ddi_file <- read.csv("raw_data.csv")
ipumsi_ddi <- read_ipums_ddi(ipumsi_ddi_file)
View(ipumsi_ddi_file)
View(ipumsi_ddi_file)
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
ipumsi_ddi_file <- read.csv("raw_data.csv")
ipumsi_ddi_file[1]
ipumsi_ddi_file[1:1]
ipumsi_ddi_file[1:1]
ipumsi_ddi_file[:1]
ipumsi_ddi_file[0:1]
ipumsi_ddi_file[1:1]
ipumsi_ddi_file[1:0]
ipumsi_ddi_file
# Load data
ipumsi_ddi_file <- read.csv("raw_data.csv", ",")
ipumsi_ddi_file
head(ipumsi_ddi_file)
death[1,]
# Load data
death <- read.csv("raw_data.csv", ",")
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
death <- read.csv("raw_data.csv", ",")
# Load data
death <- read.csv("raw_data.csv")
death[1,]
death[2,]
death[2,]
death[3,]
death[3,1]
death[3]
death
death[,]
death[,1]
death[1,1]
death[]
header(death)
head(death)
(dplyr)
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
death <- read.csv("raw_data.csv")
head(death)
for(i in death){
if (i is.null()){
View(death)
View(ipumsi_ddi_file)
View(ipumsi_ddi_file)
View(ipumsi_ddi_file)
View(ipumsi_ddi_file)
View(datasets)
View(no_axis)
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
death <- read.csv("raw_data.csv")
head(death)
View(death)
View(death)
plot(death)
death[,2]
death[1,2]
death[1,]
death[2,]
# Load data
death <- read.csv("raw_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',')
head(death)
death[2,]
plot(death)
# Load data
death <- read.csv("raw_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',',
row.names = FALSE)
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
death <- read.csv("raw_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',',
row.names = FALSE)
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
death <- read.csv("raw_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',',)
head(death)
plot(death%death)
death%Dath
death%Death
death$Death
death$ï..State
plot(death$ï..State, death$Death)
ggplot(data=death)
ggplot(data=death, aes(reorder(death$Death, death$ï..State))+
geom_point()+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1)))
death$Death
death$ï..State
ggplot(data=death+
geom_point()+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1)))
ggplot(data=death+
geom_histogram()+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1)))
death$Death
death$ï..State
ggplot(data=death+
geom_histogram(death$Death)+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1)))
ggplot(data=death+
aes(death$ï..State, death$Death)+
geom_histogram()+
theme(axis.text.x = element_text(angle=45, hjust=1, vjust = 1)))
barplot(y, names.arg = x)
x <- death$ï..State
y <- death$Death
barplot(y, names.arg = x)
ggplot(death, mapping = aes(x = reorder(ï..State, -Death), y = Death, group = id)) +
geom_col(position = "dodge", alpha = 0.8, color = "white") +
coord_flip()
ggplot(death, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "white") +
coord_flip()
ggplot(death, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
ggplot(death, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
BlackPeopleDeaths <- read.csv("raw_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',',)
head(BlackPeopleDeaths)
BlackPeopleDeaths$Death
BlackPeopleDeaths$ï..State
x <- BlackPeopleDeaths$ï..State
y <- BlackPeopleDeaths$Death
ggplot(BlackPeopleDeaths, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
BlackPeopleDeaths$Death
BlackPeopleDeaths$ï..State
x <- BlackPeopleDeaths$ï..State
y <- BlackPeopleDeaths$Death
ggplot(BlackPeopleDeaths, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
WhitePeopleDeaths <- read.csv("w_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',',)
head(WhitePeopleDeaths)
WhitePeopleDeaths$Death
WhitePeopleDeaths$ï..State
x <- WhitePeopleDeaths$ï..State
y <- WhitePeopleDeaths$Death
ggplot(WhitePeopleDeaths, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "purple") +
coord_flip()
WhitePeopleDeaths$Death
WhitePeopleDeaths$ï..States
x <- WhitePeopleDeaths$ï..States
y <- WhitePeopleDeaths$Death
ggplot(WhitePeopleDeaths, mapping = aes(x = reorder(ï..States, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "purple") +
coord_flip()
suppressPackageStartupMessages({
library(ipumsr)
library(sf)
library(dplyr)
library(ggplot2)
})
# Load data
BlackPeopleDeaths <- read.csv("b_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',',)
head(BlackPeopleDeaths)
BlackPeopleDeaths$Death
BlackPeopleDeaths$ï..State
x <- BlackPeopleDeaths$ï..State
y <- BlackPeopleDeaths$Death
ggplot(BlackPeopleDeaths, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
WhitePeopleDeaths <- read.csv("w_data.csv",
stringsAsFactors = FALSE,
strip.white = TRUE,
sep = ',',)
head(WhitePeopleDeaths)
WhitePeopleDeaths$Death
WhitePeopleDeaths$ï..States
x <- WhitePeopleDeaths$ï..States
y <- WhitePeopleDeaths$Death
ggplot(WhitePeopleDeaths, mapping = aes(x = reorder(ï..States, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "purple") +
coord_flip()
WhitePeopleDeaths$Death
WhitePeopleDeaths$ï..States
x <- WhitePeopleDeaths$ï..States
y <- WhitePeopleDeaths$Death
ggplot(WhitePeopleDeaths, mapping = aes(x = reorder(ï..States, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "purple") +
coord_flip()
WhitePeopleDeaths$Death
WhitePeopleDeaths$ï..States
x <- WhitePeopleDeaths$ï..States
y <- WhitePeopleDeaths$Death
WDeathTable <- ggplot(WhitePeopleDeaths, mapping = aes(x = reorder(ï..States, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "purple") +
coord_flip()
BlackPeopleDeaths$Death
BlackPeopleDeaths$ï..State
x <- BlackPeopleDeaths$ï..State
y <- BlackPeopleDeaths$Death
BDeathTable <- ggplot(BlackPeopleDeaths, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
BlackPeopleDeaths$Death
BlackPeopleDeaths$ï..State
x <- BlackPeopleDeaths$ï..State
y <- BlackPeopleDeaths$Death
BDeathTable <- ggplot(BlackPeopleDeaths, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
WhitePeopleDeaths$Death
WhitePeopleDeaths$ï..States
x <- WhitePeopleDeaths$ï..States
y <- WhitePeopleDeaths$Death
WDeathTable <- ggplot(WhitePeopleDeaths, mapping = aes(x = reorder(ï..States, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "purple") +
coord_flip()
View(WDeathTable)
View(WDeathTable)
ggplot(BlackPeopleDeaths, mapping = aes(x = reorder(ï..State, -Death), y = Death)) +
geom_col(position = "dodge", alpha = 0.8, color = "red") +
coord_flip()
WhitePeopleDeaths$ï..States
BDeathTable
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(BDeathTable, WDeathTable)
grid.arrange(BDeathTable, WDeathTable)
